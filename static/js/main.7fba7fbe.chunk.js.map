{"version":3,"sources":["assets/music-note.png","assets/shower.png","components/Navigation.js","components/SongList.js","components/Header.js","components/Song.js","components/Playlist.js","components/About.js","App.js","index.js"],"names":["module","exports","Navigation","Navbar","expand","style","background","Brand","href","Nav","Link","to","src","logo","alt","Toggle","aria-controls","Collapse","id","className","Item","Component","SongList","playSong","state","loading","ctx","audio","AudioContext","setState","fetch","props","song","song_name","then","data","arrayBuffer","decodeAudioData","playsound","createBufferSource","buffer","connect","destination","play","start","currentTime","catch","err","alert","suspend","resume","addToPlayList","a","songs","songData","song_id","name","artist","artist_name","oldStorage","JSON","parse","window","localStorage","getItem","push","setItem","stringify","repeat","clear","forEach","Fragment","Container","Row","Col","md","xs","musicIcon","align","this","Button","variant","onClick","disabled","title","Header","json","res","map","key","Jumbotron","Songs","removeFromPlaylist","playlist","console","log","length","i","splice","location","reload","Playlist","componentDidMount","Song","About","color","App","basename","pathname","exact","path","component","PlayList","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7fba7fbe.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/music-note.e6b145c4.png\";","module.exports = __webpack_public_path__ + \"static/media/shower.a13cc0c5.png\";","import React, { Component } from 'react'\r\nimport { Nav, Navbar } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport logo from '../assets/shower.png'\r\n\r\nclass Navigation extends Component{\r\n\r\n    render(){\r\n        return(\r\n            <Navbar expand=\"lg\" style={{background: \"#191e3e\"}}>\r\n                <Navbar.Brand href=\"\">\r\n                    <Nav.Link>\r\n                        <Link to=\"/\"><img src={logo} alt=\"logo\"/></Link>\r\n                    </Nav.Link>\r\n                </Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Nav className=\"ml-auto\">\r\n                    <Nav.Item>\r\n                        <Nav.Link>\r\n                            <Link to=\"/playlist\">Playlist</Link>\r\n                        </Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item>\r\n                        <Nav.Link>\r\n                            <Link to=\"/about\">About</Link>\r\n                        </Nav.Link>\r\n                    </Nav.Item>\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navigation","import React, { Component } from 'react'\r\nimport musicIcon from \"./../assets/music-note.png\"\r\nimport Container  from 'react-bootstrap/Container'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Button from 'react-bootstrap/Button'\r\nimport {FaPlay,FaPause,FaPlus} from 'react-icons/fa'\r\n\r\nclass SongList extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            loading : false,\r\n            play : false,\r\n            ctx: null\r\n        }\r\n    }\r\n    playSong = () => {\r\n        if(this.state.loading === false && this.state.ctx === null){\r\n            const ctx = new AudioContext()\r\n            this.setState({ctx : ctx})\r\n            let audio \r\n            this.setState({\r\n                loading: true\r\n            })\r\n            fetch(`https://shower-backend.herokuapp.com/play?song=${this.props.song.song_name}`)\r\n            .then(data => data.arrayBuffer())\r\n            .then(arrayBuffer => ctx.decodeAudioData(arrayBuffer))\r\n            .then(decodeAudioData => {\r\n                    audio = decodeAudioData\r\n            }).then(() => {\r\n                const playsound = ctx.createBufferSource()\r\n                playsound.buffer = audio\r\n                playsound.connect(ctx.destination)\r\n                if(this.state.play === false){\r\n                    playsound.start(ctx.currentTime)\r\n                    this.setState({play : true})\r\n                }\r\n                this.setState({loading: false})\r\n            })\r\n            .catch(err => {\r\n                this.setState({loading:false})\r\n                alert(err)\r\n            })\r\n        }else{\r\n            let ctx = this.state.ctx\r\n            if(ctx.state === 'running'){\r\n                ctx.suspend()\r\n                this.setState({play: false})\r\n            }\r\n            else if(ctx.state === 'suspended'){\r\n                ctx.resume()\r\n                this.setState({play: true})\r\n            }\r\n                \r\n        }\r\n    }\r\n\r\n    addToPlayList = async () =>{\r\n        let songs = []\r\n        let songData = {\r\n            id : this.props.song.song_id,\r\n            name : this.props.song.song_name,\r\n            artist : this.props.song.artist_name\r\n        }\r\n        let oldStorage = JSON.parse(window.localStorage.getItem(\"PlayList\"))\r\n        if(oldStorage == null){\r\n            songs.push(songData)\r\n            window.localStorage.setItem(\"PlayList\",JSON.stringify(songs))\r\n        }else{\r\n            let repeat = false\r\n            window.localStorage.clear(\"PlayList\")\r\n            oldStorage.forEach(song => {\r\n                if(song.id === songData.id)\r\n                repeat = true\r\n                songs.push(song)\r\n            })\r\n            if(repeat === false){\r\n                songs.push(songData)\r\n                alert(\"Song Added!\")\r\n            }else{\r\n                alert(\"Its Already There\")\r\n            }\r\n            window.localStorage.setItem(\"PlayList\",JSON.stringify(songs))\r\n        }      \r\n    }\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                <Container>\r\n                    <Row>\r\n                        <Col md={10} xs={8}>\r\n                            <img src={musicIcon} alt=\"\" align=\"left\"/>\r\n                            <h5>&nbsp; {this.props.song.song_name}</h5>\r\n                            <p>&nbsp; {this.props.song.artist_name}</p>\r\n                        </Col>\r\n                        <Col md={2} xs={4}>\r\n                            <Button variant=\"outline-info\" onClick={this.playSong} disabled={this.state.loading}>\r\n                                {this.state.play ?\r\n                                <FaPause/>\r\n                                :\r\n                                <FaPlay/>}\r\n                            </Button>&ensp;\r\n                            <Button variant=\"outline-success\" title=\"Add To Playlist\" onClick={this.addToPlayList}><FaPlus/></Button>\r\n                        </Col>\r\n                    </Row>\r\n                    <hr/>\r\n                </Container>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\nexport default SongList","import React, { Component } from 'react'\r\nimport Jumbotron from 'react-bootstrap/Jumbotron'\r\nimport SongList from \"./SongList\"\r\n\r\nclass Header extends Component{\r\n    constructor() {\r\n        super()\r\n        this.state = {songData: null}\r\n        fetch(\"https://shower-backend.herokuapp.com/songs\")\r\n          .then(async data => {\r\n             let res = await data.json()\r\n            const songData = res.map(song => <SongList key={song.song_id} song={song}/>)\r\n            this.setState({songData: songData})\r\n          })\r\n    }\r\n    render() {\r\n        return(\r\n            <React.Fragment>\r\n                <Jumbotron>\r\n                    <h1>Welcome To Shower{this.props.key}</h1>\r\n                </Jumbotron>\r\n                {this.state.songData}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header","import React, { Component } from 'react'\r\nimport  Container  from 'react-bootstrap/Container'\r\nimport  Row  from 'react-bootstrap/Row'\r\nimport  Col  from 'react-bootstrap/Col'\r\nimport Button  from 'react-bootstrap/Button'\r\nimport musicIcon from './../assets/music-note.png'\r\nimport {FaPlay,FaPause,FaMinus} from 'react-icons/fa'\r\n\r\nclass Songs extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            loading : false,\r\n            play : false,\r\n            ctx: null\r\n        }\r\n    }\r\n    playSong = () => {\r\n        if(this.state.loading === false && this.state.ctx === null){\r\n            const ctx = new AudioContext()\r\n            this.setState({ctx : ctx})\r\n            let audio \r\n            this.setState({\r\n                loading: true\r\n            })\r\n            fetch(`https://shower-backend.herokuapp.com/play?song=${this.props.song.name}`)\r\n            .then(data => data.arrayBuffer())\r\n            .then(arrayBuffer => ctx.decodeAudioData(arrayBuffer))\r\n            .then(decodeAudioData => {\r\n                    audio = decodeAudioData\r\n            }).then(() => {\r\n                const playsound = ctx.createBufferSource()\r\n                playsound.buffer = audio\r\n                playsound.connect(ctx.destination)\r\n                if(this.state.play === false){\r\n                    playsound.start(ctx.currentTime)\r\n                    this.setState({play : true})\r\n                }\r\n                this.setState({loading: false})\r\n            })\r\n            .catch(err => {\r\n                this.setState({loading:false})\r\n                alert(err)\r\n            })\r\n        }else{\r\n            let ctx = this.state.ctx\r\n            if(ctx.state === 'running'){\r\n                ctx.suspend()\r\n                this.setState({play: false})\r\n            }   \r\n            else if(ctx.state === 'suspended'){\r\n                ctx.resume()\r\n                this.setState({play: true})\r\n            }\r\n        }\r\n    }\r\n\r\n    removeFromPlaylist = () => {\r\n        let songs = []\r\n        let playlist = JSON.parse(window.localStorage.getItem(\"PlayList\"))\r\n        console.log(playlist.length)\r\n        for(let i = 0; i <= playlist.length; i++){\r\n            if(playlist[i].id === this.props.song.id){\r\n                playlist.splice(i , 1)\r\n                console.log(playlist)\r\n                playlist.forEach(song => {\r\n                    songs.push(song)\r\n                })\r\n                window.localStorage.clear(\"PlayList\")\r\n                window.localStorage.setItem(\"PlayList\",JSON.stringify(songs))\r\n                break\r\n            }\r\n        }\r\n        window.location.reload()\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                <Container>\r\n                    <Row>\r\n                        <Col md={10} xs={8}>\r\n                            <img src={musicIcon} alt=\"\" align=\"left\"/>\r\n                            <h5>&nbsp; {this.props.song.name}</h5>\r\n                            <p>&nbsp; {this.props.song.artist}</p>\r\n                        </Col>\r\n                        <Col md={2} xs={4}>\r\n                            <Button variant=\"outline-info\" onClick={this.playSong}>\r\n                                {this.state.play ?\r\n                                <FaPause/>\r\n                                :\r\n                                <FaPlay/>}\r\n                            </Button>&ensp;\r\n                            <Button variant=\"outline-danger\" title=\"Remove From Playlist\" onClick={this.removeFromPlaylist}><FaMinus/></Button>\r\n                        </Col>\r\n                    </Row>\r\n                    <hr/>\r\n                </Container>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Songs\r\n","import React, { Component } from 'react'\r\nimport Song from './Song'\r\n\r\nclass Playlist extends Component{\r\n    constructor(){\r\n        super()\r\n        this.state = {songs : null}\r\n    }\r\n    componentDidMount = () => {\r\n        let songData = JSON.parse(window.localStorage.getItem(\"PlayList\"))\r\n        if(songData !== null){\r\n            let songs = songData.map(song => <Song key={song.id} song={song}/>)\r\n            this.setState({songs : songs})\r\n        }\r\n    }\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                {this.state.songs}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Playlist","import React, { Component } from 'react'\r\nimport Jumbotron from 'react-bootstrap/Jumbotron'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Button from 'react-bootstrap/Button'\r\nimport {FaGithub, FaJsSquare} from 'react-icons/fa'\r\n\r\nclass About extends Component{\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                <Jumbotron>\r\n                    <h1>About Page</h1>\r\n                </Jumbotron>\r\n                <Container>\r\n                    <b>This app was made in ReactJS and uses a REST API that uses the ExpressJS framework along with Postgres with Sequelize ORM for database. </b><br/><br/>\r\n                    <Button variant=\"dark\" href=\"https://github.com/DhavalKotak/\"><FaGithub color=\"white\" /> Profile</Button>&ensp;\r\n                    <Button variant=\"success\" href=\"https://github.com/DhavalKotak/shower-frontend\"><FaJsSquare color=\"white\" /> Repository</Button>\r\n                </Container><br/>\r\n\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default About","import React, { Component } from \"react\"\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\"\nimport Navigation from \"./components/Navigation\"\nimport Header from \"./components/Header\"\nimport PlayList from './components/Playlist'\nimport About from './components/About'\n\nclass App extends Component {\n    render() {\n      return (\n        <React.Fragment>\n          <Router basename={window.location.pathname || ''}>\n            <Navigation /><br/>\n              <Switch>\n                <Route exact path=\"/\" component={Header}/>\n                <Route path=\"/playlist\" component={PlayList}/>\n                <Route path=\"/about\" component={About}/>\n              </Switch>\n            </Router>\n        </React.Fragment>\n      )\n    }\n}\nexport default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\nReactDOM.render(\n    <App />,\n  document.getElementById(\"root\")\n)\n\n"],"sourceRoot":""}